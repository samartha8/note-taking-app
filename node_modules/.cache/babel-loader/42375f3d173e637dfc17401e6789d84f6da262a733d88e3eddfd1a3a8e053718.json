{"ast":null,"code":"var _jsxFileName = \"D:\\\\Intern\\\\note-taking-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NoteForm from './Components/NoteForm';\nimport NoteList from './Components/NoteList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]); // State to hold all notes\n  const [editingIndex, setEditingIndex] = useState(null); // State to track which note is being edited\n\n  // Function to add a new note\n  const addNote = (title, content) => {\n    setNotes([...notes, {\n      title,\n      content\n    }]);\n  };\n\n  // Function to delete a note\n  const deleteNote = index => {\n    setNotes(notes.filter((_, i) => i !== index));\n  };\n\n  // Function to update/edit an existing note\n  const updateNote = (title, content) => {\n    if (editingIndex !== null) {\n      const updatedNotes = [...notes];\n      updatedNotes[editingIndex] = {\n        title,\n        content\n      };\n      setNotes(updatedNotes);\n      setEditingIndex(null); // Reset editing after update\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Note Taking App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteForm, {\n      onSave: editingIndex === null ? addNote : updateNote // Use addNote or updateNote based on editing mode\n      ,\n      initialTitle: editingIndex !== null ? notes[editingIndex].title : '',\n      initialContent: editingIndex !== null ? notes[editingIndex].content : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n      notes: notes,\n      onDeleteNote: deleteNote,\n      onEditNote: index => setEditingIndex(index) // Set the index of the note being edited\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RLKnsweMFDQ2gUi6j7ZG1QstVY0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NoteForm","NoteList","jsxDEV","_jsxDEV","App","_s","notes","setNotes","editingIndex","setEditingIndex","addNote","title","content","deleteNote","index","filter","_","i","updateNote","updatedNotes","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","initialTitle","initialContent","onDeleteNote","onEditNote","_c","$RefreshReg$"],"sources":["D:/Intern/note-taking-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport NoteForm from './Components/NoteForm';\nimport NoteList from './Components/NoteList';\ntype Note = {\n  title: string;\n  content: string;\n};\n\nconst App: React.FC = () => {\n  const [notes, setNotes] = useState<Note[]>([]); // State to hold all notes\n  const [editingIndex, setEditingIndex] = useState<number | null>(null); // State to track which note is being edited\n\n  // Function to add a new note\n  const addNote = (title: string, content: string) => {\n    setNotes([...notes, { title, content }]);\n  };\n\n  // Function to delete a note\n  const deleteNote = (index: number) => {\n    setNotes(notes.filter((_, i) => i !== index));\n  };\n\n  // Function to update/edit an existing note\n  const updateNote = (title: string, content: string) => {\n    if (editingIndex !== null) {\n      const updatedNotes = [...notes];\n      updatedNotes[editingIndex] = { title, content };\n      setNotes(updatedNotes);\n      setEditingIndex(null); // Reset editing after update\n    }\n  };\n\n  return (\n    <div>\n      <h1>Note Taking App</h1>\n\n      {/* Note Form for adding/editing notes */}\n      <NoteForm\n        onSave={editingIndex === null ? addNote : updateNote} // Use addNote or updateNote based on editing mode\n        initialTitle={editingIndex !== null ? notes[editingIndex].title : ''}\n        initialContent={editingIndex !== null ? notes[editingIndex].content : ''}\n      />\n\n      {/* List of all notes */}\n      <NoteList\n        notes={notes}\n        onDeleteNote={deleteNote}\n        onEditNote={(index) => setEditingIndex(index)} // Set the index of the note being edited\n      />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM7C,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC,CAAC,CAAC;;EAEvE;EACA,MAAMW,OAAO,GAAGA,CAACC,KAAa,EAAEC,OAAe,KAAK;IAClDL,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEK,KAAK;MAAEC;IAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIC,KAAa,IAAK;IACpCP,QAAQ,CAACD,KAAK,CAACS,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC,CAAC;EAC/C,CAAC;;EAED;EACA,MAAMI,UAAU,GAAGA,CAACP,KAAa,EAAEC,OAAe,KAAK;IACrD,IAAIJ,YAAY,KAAK,IAAI,EAAE;MACzB,MAAMW,YAAY,GAAG,CAAC,GAAGb,KAAK,CAAC;MAC/Ba,YAAY,CAACX,YAAY,CAAC,GAAG;QAAEG,KAAK;QAAEC;MAAQ,CAAC;MAC/CL,QAAQ,CAACY,YAAY,CAAC;MACtBV,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGxBrB,OAAA,CAACH,QAAQ;MACPyB,MAAM,EAAEjB,YAAY,KAAK,IAAI,GAAGE,OAAO,GAAGQ,UAAW,CAAC;MAAA;MACtDQ,YAAY,EAAElB,YAAY,KAAK,IAAI,GAAGF,KAAK,CAACE,YAAY,CAAC,CAACG,KAAK,GAAG,EAAG;MACrEgB,cAAc,EAAEnB,YAAY,KAAK,IAAI,GAAGF,KAAK,CAACE,YAAY,CAAC,CAACI,OAAO,GAAG;IAAG;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,eAGFrB,OAAA,CAACF,QAAQ;MACPK,KAAK,EAAEA,KAAM;MACbsB,YAAY,EAAEf,UAAW;MACzBgB,UAAU,EAAGf,KAAK,IAAKL,eAAe,CAACK,KAAK,CAAE,CAAC;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CA3CID,GAAa;AAAA0B,EAAA,GAAb1B,GAAa;AA6CnB,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}