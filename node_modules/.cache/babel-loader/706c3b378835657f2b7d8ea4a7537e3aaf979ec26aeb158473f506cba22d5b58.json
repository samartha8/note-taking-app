{"ast":null,"code":"var _jsxFileName = \"D:\\\\Intern\\\\note-taking-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NoteForm from './Components/NoteForm';\nimport NoteList from './Components/NoteList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]); // State for all notes\n  const [editingIndex, setEditingIndex] = useState(null); // Track which note is being edited\n\n  // Add a new note\n  const addNote = (title, content) => {\n    setNotes([...notes, {\n      title,\n      content\n    }]);\n  };\n\n  // Delete a note\n  const deleteNote = index => {\n    setNotes(notes.filter((_, i) => i !== index)); // Remove the note with the specified index\n    if (editingIndex === index) setEditingIndex(null); // Reset editing if the deleted note is being edited\n  };\n\n  // Update an existing note\n  const updateNote = (title, content) => {\n    if (editingIndex !== null) {\n      const updatedNotes = [...notes];\n      updatedNotes[editingIndex] = {\n        title,\n        content\n      }; // Update the note at the editingIndex\n      setNotes(updatedNotes);\n      setEditingIndex(null); // Reset editing mode\n    }\n  };\n\n  // Handle Edit button click (set the note index to be edited)\n  const handleEditNote = index => {\n    setEditingIndex(index); // Set the index of the note being edited\n  };\n\n  // Check if we are in editing mode and the editingIndex is valid\n  const noteBeingEdited = editingIndex !== null ? notes[editingIndex] : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Note Taking App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteForm, {\n      onSave: editingIndex === null ? addNote : updateNote // Either add a new note or update an existing one\n      ,\n      initialTitle: noteBeingEdited ? noteBeingEdited.title : '' // Safely access the title\n      ,\n      initialContent: noteBeingEdited ? noteBeingEdited.content : '' // Safely access the content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n      notes: notes,\n      onDeleteNote: deleteNote,\n      onEditNote: handleEditNote // Pass the handleEditNote function\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RLKnsweMFDQ2gUi6j7ZG1QstVY0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NoteForm","NoteList","jsxDEV","_jsxDEV","App","_s","notes","setNotes","editingIndex","setEditingIndex","addNote","title","content","deleteNote","index","filter","_","i","updateNote","updatedNotes","handleEditNote","noteBeingEdited","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","initialTitle","initialContent","onDeleteNote","onEditNote","_c","$RefreshReg$"],"sources":["D:/Intern/note-taking-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport NoteForm from './Components/NoteForm';\nimport NoteList from './Components/NoteList';\ntype Note = {\n  title: string;\n  content: string;\n};\n\nconst App: React.FC = () => {\n  const [notes, setNotes] = useState<Note[]>([]); // State for all notes\n  const [editingIndex, setEditingIndex] = useState<number | null>(null); // Track which note is being edited\n\n  // Add a new note\n  const addNote = (title: string, content: string) => {\n    setNotes([...notes, { title, content }]);\n  };\n\n  // Delete a note\n  const deleteNote = (index: number) => {\n    setNotes(notes.filter((_, i) => i !== index)); // Remove the note with the specified index\n    if (editingIndex === index) setEditingIndex(null); // Reset editing if the deleted note is being edited\n  };\n\n  // Update an existing note\n  const updateNote = (title: string, content: string) => {\n    if (editingIndex !== null) {\n      const updatedNotes = [...notes];\n      updatedNotes[editingIndex] = { title, content }; // Update the note at the editingIndex\n      setNotes(updatedNotes);\n      setEditingIndex(null); // Reset editing mode\n    }\n  };\n\n  // Handle Edit button click (set the note index to be edited)\n  const handleEditNote = (index: number) => {\n    setEditingIndex(index); // Set the index of the note being edited\n  };\n\n  // Check if we are in editing mode and the editingIndex is valid\n  const noteBeingEdited = editingIndex !== null ? notes[editingIndex] : null;\n\n  return (\n    <div>\n      <h1>Note Taking App</h1>\n\n      {/* Form for adding or editing notes */}\n      <NoteForm\n        onSave={editingIndex === null ? addNote : updateNote} // Either add a new note or update an existing one\n        initialTitle={noteBeingEdited ? noteBeingEdited.title : ''} // Safely access the title\n        initialContent={noteBeingEdited ? noteBeingEdited.content : ''} // Safely access the content\n      />\n\n      {/* List of Notes */}\n      <NoteList\n        notes={notes}\n        onDeleteNote={deleteNote}\n        onEditNote={handleEditNote} // Pass the handleEditNote function\n      />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM7C,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC,CAAC,CAAC;;EAEvE;EACA,MAAMW,OAAO,GAAGA,CAACC,KAAa,EAAEC,OAAe,KAAK;IAClDL,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEK,KAAK;MAAEC;IAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIC,KAAa,IAAK;IACpCP,QAAQ,CAACD,KAAK,CAACS,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/C,IAAIN,YAAY,KAAKM,KAAK,EAAEL,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;EACrD,CAAC;;EAED;EACA,MAAMS,UAAU,GAAGA,CAACP,KAAa,EAAEC,OAAe,KAAK;IACrD,IAAIJ,YAAY,KAAK,IAAI,EAAE;MACzB,MAAMW,YAAY,GAAG,CAAC,GAAGb,KAAK,CAAC;MAC/Ba,YAAY,CAACX,YAAY,CAAC,GAAG;QAAEG,KAAK;QAAEC;MAAQ,CAAC,CAAC,CAAC;MACjDL,QAAQ,CAACY,YAAY,CAAC;MACtBV,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;;EAED;EACA,MAAMW,cAAc,GAAIN,KAAa,IAAK;IACxCL,eAAe,CAACK,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMO,eAAe,GAAGb,YAAY,KAAK,IAAI,GAAGF,KAAK,CAACE,YAAY,CAAC,GAAG,IAAI;EAE1E,oBACEL,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGxBvB,OAAA,CAACH,QAAQ;MACP2B,MAAM,EAAEnB,YAAY,KAAK,IAAI,GAAGE,OAAO,GAAGQ,UAAW,CAAC;MAAA;MACtDU,YAAY,EAAEP,eAAe,GAAGA,eAAe,CAACV,KAAK,GAAG,EAAG,CAAC;MAAA;MAC5DkB,cAAc,EAAER,eAAe,GAAGA,eAAe,CAACT,OAAO,GAAG,EAAG,CAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eAGFvB,OAAA,CAACF,QAAQ;MACPK,KAAK,EAAEA,KAAM;MACbwB,YAAY,EAAEjB,UAAW;MACzBkB,UAAU,EAAEX,cAAe,CAAC;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CApDID,GAAa;AAAA4B,EAAA,GAAb5B,GAAa;AAsDnB,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}